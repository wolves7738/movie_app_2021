{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82109\\\\Desktop\\\\movie_app_2021\\\\src\\\\App.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      const {\n        data: {\n          data: {\n            movies\n          }\n        }\n      } = await axios.get('https://yts.mx/api/v2/list_movies.json');\n      this.setState({\n        movies\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isLoading ? 'Loading...' : 'We are ready'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/82109/Desktop/movie_app_2021/src/App.js"],"names":["React","axios","App","Component","state","isLoading","movies","getMovies","data","get","setState","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,MAAM,EAAE;AAFF,KADwB;;AAAA,SAWhCC,SAXgC,GAWpB,YAAY;AACtB,YAAM;AACJC,QAAAA,IAAI,EAAE;AACJA,UAAAA,IAAI,EAAE;AAAEF,YAAAA;AAAF;AADF;AADF,UAIH,MAAML,KAAK,CAACQ,GAAN,CAAU,wCAAV,CAJT;AAKA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA;AAAF,OAAd;AACD,KAlB+B;AAAA;;AAoBhCK,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,SAAL;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AACA,wBAAO;AAAA,gBAAOC,SAAS,GAAG,YAAH,GAAkB;AAAlC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AA3B+B;;AA8BlC,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n  \n  //프로미스(Promise)의 3가지 상태(states)\n  //Pending(대기) : 비동기 처리 로직이 아직 완료되지 않은 상태\n  //Fulfilled(이행) : 비동기 처리가 완료되어 프로미스가 결과 값을 반환해준 상태\n  //Rejected(실패) : 비동기 처리가 실패하거나 오류가 발생한 상태\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    }= await axios.get('https://yts.mx/api/v2/list_movies.json');\n    this.setState({ movies });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    return <div>{ isLoading ? 'Loading...' : 'We are ready' }</div>;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}